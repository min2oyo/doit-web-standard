1. 함수
- 프로그래밍에서 가장 중요한 뼈대를 이룸
- 동작해야 할 목적대로 묶은 명령
- alert()은 내장 함수
- 웹 브라우저에서 함수 선언 부분을 먼저 해석함. 선언,호출 위치는 상관 없음
- 보통 스크립트 소스의 앞 부분이나 뒷부분에 함수 선언 부분을 모아 놓고 필요할 때마다 호출해서 사용함

변수
- 스코프(scope)
    - 변수를 선언하고 적용되는 범위
    - 함수 안에서 예약어 명시를 안 하면 전역 변수가 됨
- 호이스팅(hoisting)
    - '끌어올린다'라는 뜻
    - var는 선언과 할당을 분리해서 선언 부분을 스코프의 가장 위쪽으로 끌어올림
- 예약어
    - var: 함수 영역(레벨)의 스코프를 가짐
    - let, const: 블록 영역의 스코프를 가짐

함수
- 실행 과정
    - 해석기가 예약어 function을 만나면 함수 선언을 인식하고 블록{}을 해석함. 아직 실행은 안 함
    - 함수()를 만나면 해석해 두었던 함수()를 실행
    - 인수를 적용하여 return


일반 함수

    선언, 정의
    
        function 함수명() {
            ...
        }

    호출, 실행

        함수명()

익명 함수

    function(a, b) {
        return a + b;
    }

    - 바로 변수에 담아서 사용

즉시 실행 함수

    (function () {
        ...
    }());

    (function (매개변수) {
        ...
    }(인수));

    <body onload="함수명"> // (?)

화살표 함수

    (매개변수) => {...}

    매개변수 X

        const hi = function() {
            return "안녕하세요?";
        }

        const hi = () => { return "안녕하세요?" };

        const hi = () => "안녕하세요?"  //한 줄일 경우
    
    매개변수 1개

        let hi = function(user) {
            document.write(user + "님, 안녕하세요?");
        }

        let hi = user => { document.write(user + "님, 안녕하세요?"); }

    매개변수 2개

        let sum = function(a, b) {
            return a + b;
        }

        let sum = (a, b) => a + b;

2. 이벤트(event)
- 버튼을 클릭하거나 항목을 선택하는 것
- 이벤트 처리기, 이벤트 핸들러(event handler): 이벤트가 발생했을 때 실행하는 함수
- 메인 메뉴를 클릭하면 서브메뉴가 자연스럽게 펼쳐짐. 페이지 로딩이 끝나면 배경 화면이 움직임 등 효과
- 마우스나 키보드를 사용할 때, 웹 문서를 불러올 때, 폼(form)에 내용을 입력할 때 발생

    마우스 이벤트
    - click: HTML요소를 클릭할 때 발생
    - dbclick: HTML 요소를 어블 클릭할 때 발생
    - mousedown: 요소 위에서 마우스 버튼을 눌렀을 때 발생
    - mousemove: 요소 위에서 마우스 포인터를 움직일 때 발생
    - mouseover: 마우스 포인터가 요소 위로 옮겨질 때 발생
    - mouseout: 마우스 포인터가 요소를 벗어날 때 발생
    - mouseup: 요소 위에 놓인 마우스 버튼에서 손을 땔 때 발생

    키보드 이벤트
    - keydown: 키를 누르는 동안 발생
    - keypress: 키를 눌렀을 때 발생
    - keyup: 키에서 손을 땔 때 발생

    문서 로딩 이벤트
    - abort: 문서가 완전히 로딩되기 전에 불러오기를 멈췄을 때 발생
    - error: 문서가 정확히 로딩되지 않았을 때 발생
    - load: 문서 로딩이 끝나면 발생
    - resize: 문서 화면 크기가 바뀌었을 때 발생
    - scroll: 문서 화면이 스크롤 되었을 때 발생
    - unload: 문서에서 벗어날 때 발생

    폼 이벤트
    - blur: 폼 요소에 포커스를 잃었을 때 발생
    - change: 목록이나 체크 상태 등이 변경되면 발생 (<input>, <select>, <textarea>)
    - focus: 폼 요소에 포커스가 놓였을 때 발생 (<label>, <select>, <textarea>, <button>)
    - reset: 폼이 리셋되었을 때 발생
    - submit: submit 버튼을 클릭했을 때 발생

- 이벤트 처리: 이벤트가 발생한 HTML 태그에 이벤트 처리기를 직접 연결

    <태그 on이벤트명 = "함수명">



3. DOM
- HTML 요소에 이벤트 처리기를 지정하면 태그 속성과 자바스크립트 소스가 섞임
- DOM을 이용하여 이벤트 처리기를 지정하면 태그와 자바스크립트 소스를 분리해서 사용할 수 있음


    웹요소.onclick = 함수;