1. 객체(Object)
- 프로그램에서 인식할 수 있는 모든 대상
- 자바스크립트는 웹 사이트나 웹 애플리케이션을 개발하는 언어이므로 웹과 관련된 대상
- 데이터를 저장하고 처리하는 기본 단위

자바스크립트 객체
- DOM(Document Object Model: 문서 객체 모델)
    - 객체를 사용해 웹 문서를 관리하는 방법
    - 웹 문서, 이미지, 링크 , 텍스트 필드 등
    - document, image, link 등

- 브라우저
    - 웹 브라우저에서 사용하는 정보
    - navigator, history, location, screen 등

- 내장 객체
    - 자주 사용하는 요소는 자바스크립트 안에 미리 객체로 정의되어 있음
    - 날짜, 시간

객체의 인스턴스(instance)

    new 객체명()

프로퍼티(property)
- 객체의 특징이나 속성

메서드(method)
- 객체에서 할 수 있는 동작
- .찍고 표시할 때 뒤에 () 씀

자동차
- 프로그램: 자동차 운전
- 객체: 자동차
- 프로퍼티: 제조사, 모델명, 색상, 배기량 등
- 메서드: 시동 걸기, 움직이기, 멈추기, 주차하기 등



2. 내장 객체
Array 객체

    // 초기값이 없는 경우
    let numbers = new Array();  // 비열 크기 지정 안 함
    let numbers = new Array(4); // 배열 크기 지정

    // 초기값이 있는 경우
    let numbers = ["one", "two", "three", "four"];  // 배열 선언
    let numbers = Array("one", "two", "three", "four"); //Array 객체를 사용한 배열 선언
    
- 메서드
    - concat(): 기존 배열에 요소를 추가해 새로운 배열을 만듦
    - join(): 배열 요소를 문자열로 합침. 구분자를 지정할 수 있음
    - unshift(): 배열의 시작 부분에 새로운 요소 추가
    - push(): 배열의 맨 끝에 새로운 요소를 추가
    - shift(): 배열의 첫 번째 요소를 꺼내 그 값을 결과로 반환
    - pop(): 배열의 마지막 요소를 꺼내 그 값을 결과로 반환
    - splice(): 배열에서 특정한 부분만 자르고 그 값을 반환. (인수1: 삭제할 위치, 인수2: 삭제할 개수, 인수3: 삭제하고 추가할 값)
    - slice(): 배열에서 특정한 부분만 잘라냄. 원본 유지
    - every(): 배열의 모든 요소가 주어진 함수에 대해 true, false를 반환
    - filter(): 배열 요소 중에서 주어진 필터링 함수에 대해 true인 요소만 골라 새로운 배열을 만듦
    - forEach(): 배열의 모든 요소에 대해 주어진 함수를 실행
    - indexOf(): 주어진 값과 일치하는 값이 있는 배열 요소의 첫 인덱스를 찾음
    - reverse(): 배열의 배치 순서를 역순으로 바꿈
    - sort(): 배열 요소를 지정한 조건에 따라 정렬
    - toString(): 배열에서 지정한 부분을 문자열로 반환. 쉼표(,)로 구분

Date 객체

    new Date();
    new Date("2020-02-14");
    new Date("2020-02-14T18:00:00");
    new Date("2020-02-14T18:00:00Z");   //국제표준시
    new Date("02/14/2020");
    new Date("Mon Jan 20 2020 15:00:41 GMT+0900 (대한민국 표준시)");

- 메서드
    // 날짜,시간 정보를 가져옴
    - getFullYear(): 연도를 4자리 숫자로 표시
    - getMonth(): 0~11 사이의 숫자로 월 표시
    - getDate(): 1~31 사이의 숫자로 일 표시
    - getDay(): 0~6 사이의 숫자로 요일 표시. (0:일요일, 6:토요일)
    - getTime(): 1970년 1월 1일 자정 이후의 시간을 밀리 초(1/1000초)로 표시
    - getHours(): 0~23 사이의 숫자로 시 표시
    - getMinutes(): 0~59 사이의 숫자로 분 표시 
    - getSeconds(): 0~59 사이의 숫자로 초 표시
    - getMilliseconds(): 0~999 사이의 숫자로 밀리초 표시

    // 날짜,시간 설정
    - setFullYear(): 연도를 4자리 숫자로 설정
    - setMonth(): 0~11 사이의 숫자로 월 설정
    - setDate(): 1~31 사이의 숫자로 일 설정
    - setTime(): 1970년 1월 1일 자정 이후의 시간을 밀리 초(1/1000초)로 설정
    - setHours(): 0~23 사이의 숫자로 시 설정
    - setMinutes(): 0~59 사이의 숫자로 분 설정 
    - setSeconds(): 0~59 사이의 숫자로 초 설정
    - setMilliseconds(): 0~999 사이의 숫자로 밀리초 설정

    // 날짜,시간 형식 바꾸기
    - toLocaleString(): 현재 날짜와 시간을 현지 시간(local time)으로 표시
    - toString(): Date 객체 타입을 문자열로 표시


Math 객체
- Array, Date와 달리 instance를 안 씀

    Math.프로퍼티명
    Math.메서드명

- 프로퍼티
    - E: 오일러 상수
    - PI: 원주율
    - SQRT2: 루트 2
    - SQRT1_2: 1과 루트 2
    - LN2: e^x = 2
    - LN10: e^x = 10
    - LOG2E: 2^x = e
    - LOG10E: 10^x = e

- 메서드
    - abs(): 절대값
    - acos(): arc cosine
    - asin(): arc sine
    - atan(): arc tangent
    - atan2(): arc tangent
    - ceil(): 매개변수의 소수점 이하 부분 올림
    - cos(): cosine
    - exp(): 지수 함수
    - floor(): 매개변수의 소수점 이하 부분을 버림
    - log(): 매개변수에 대한 로그(log) 값을 반환
    - max(): 최대값
    - min(): 최소값
    - pow(): 지수값
    - random(): 0과 1 사이의 무작위 수
    - round(): 반올림
    - sin(): sine
    - sqrt(): 제곱곤
    - tan(): tangent


3. 브라우저 관련 객체
- 자바스크립트 내에 웹 브라우저와 관련된 여러 객체가 미리 정의되어 있음
- 특정한 사이트로 이동하거나 새 탭을 여는 등 웹 브라우저와 관련된 여러 가지 효과를 만들 수 있음
- 웹 브라우저가 열리면 가장 먼저 window 객체가 만들어 짐. 그 후 하위 요소(웹 문서, 주소 표시줄)에 해당하는 객체들이 나타남

계층
- window: 브라우저 창이 열릴 때마다 하나씩 만들어짐. 최상위 요소
    - document: 웹 문서마다 하나씩 있음. <body> 태그를 만나면 만들어짐. HTML 문서 정보다 담겨 있음
        - area
        - image
        - form
            - textarea
            - button
            - text
            - checkbox
            - fileUpload
            - radio
        - anchor
    - navigator: 현재 사용하는 브라우저의 정보가 들어 있음
    - history: 현재 창에서 사용자의 방문 기록을 저장
    - location: 현재 페이지의 URL 정보가 담겨 있음
    - screen: 현재 사용하는 화면 정보를 다룸

window 객체
- 웹 브라우저의 상태를 제어하며 자바스크립트의 최상위임
- 자바스크립트의 모든 객체는 window 객체 안에 있음

- 프로퍼티: 주로 웹 브라우저 창의 정보를 가져오거나 값을 바꿀 때 사용
    - fullScreen: 전체화면(?)
    - document: 브라우저 창에 표시된 웹 문서에 접근
    - frameElement: 현재 창이 다른 요소 안에 포함되어 있을 경우 그 요소를 반환. 아니면 null 반환
    - innerHeight: 내용 영역의 높이
    - innerWidth: 내용 영역의 너비
    - localStorage: 웹 브라우저에서 데이터를 저장하는 로컬 스토리지를 반환
    - location: window 객체의 위치 또는 현재 URL을 나타냄
    - name: 브라우저 창의 이름을 가져오거나 수정
    - outerHeight: 브라우저 창의 바깥 높이
    - outerWidth: 브라우저 창의 바깥 너비
    - pageXOffset: 스크롤 했을 때 수평으로 이동하는 픽셀 수. scrollX와 같음
    - pageYOffset: 스크롤 했을 때 수직으로 이동하는 픽셀 수. scrollY와 같음
    - parent: 현재 창이나 서브 프레임의 부모
    - screenX: 브라우저 창의 왼쪽 테두리가 모니터 왼쪽 테두리에서 떨어져 있는 거리
    - screenY: 브라우저 창의 위쪽 테두리가 모니터 위쪽 테두리에서 떨어져 있는 거리
    - scrollX: 스크롤 했을 때 수평으로 이동하는 픽셀 수
    - scrollY: 스크롤 했을 때 수직으로 이동하는 픽셀 수
    - sessionStorage: 웹 브라우저에서 데이터를 저장하는 세션 스토리지를 반환

- 메서드: 웹 브라우저 창 자체와 관련됨 (대화 창 표시, 브라우저 창의 크기나 위치 알아내고 지정)
    - alert(): 알림 창
    - blur(): 현재 창에서 포커스 제거
    - close(): 현재창 닫음
    - confirm(): [확인], [취소] 버튼이 있는 확인 창 표시
    - focus(): 현재 창에 포커스 부여
    - moveBy(): 현재 창을 지정한 크기만큼 이동
    - moveTo(): 현재 창을 지정한 좌표로 이동
    - open(): 새로운 창
    - postMessage(): 메시지를 다른 창으로 전달
    - print(): 현재 문서 인쇄
    - prompt(): 프롬프트 창에 입력한 텍스트 반환
    - resizeBy(): 지정한 크기만큼 현재 창의 크기 조절
    - resizeTo(): 동적으로 브라우저 창의 크기 조절
    - scroll(): 문서에서 특정 위치로 스크롤
    - scrollBy(): 지정한 크기만큼씩 스크롤
    - scrollTo() 지정한 위치까지 스크롤
    - sizeToContent(): 내용에 맞게 창의 크기를 맞춤
    - stop(): 로딩을 중지

- open()

    window.open(경로, 창 이름, 창 옵션);

    - 경로: 팝업 창에 표시할 문서나 사이트의 경로(주소)를 나타냄
    - 창 이름: 팝업 창의 이름을 지정하면 항상 이 창에 팝업 내용이 나타나도록 할 수 있음. 지정하지 않으면 팝업 창이 계속 새로 나타남
    - 옵션: left, top 속성을 사용해 위치를 정하거나 width, height 속성을 사용해 크기를 지정할 수 있음. 위치를 지정하지 않으면 팝업 창은 화면의 맨 왼쪽 위에 나타남

    - 주로 홈페이지의 팝업 창을 띄울 때 사용
    - 요즘은 opne()은 안 쓰고 <div>로 레이어 창을 만듦

- close()

    window.close();

navigator 객체
- 웹 브라우저의 버전을 비롯해 플러그인 설치 정보나 온오프라인 등의 여러 정보가 담겨 있음
- 사용자는 수정할 수 없으며 가져와서 보여줄 수만 있음
- 메서드는 대부분 일부 브라우저에서만 지원

- 렌더링 엔진(rendering engine, layout engine)
    - 웹 브라우저가 점점 다양해짐에 따라 모든 사용자의 웹 브라우저에서 똑같이 동작하는 웹 문서를 개발할 필요성이 생김
    - 아직 표준화되지 않은 CSS 속성 앞에는 브라우저 벤더를 의미하는 프리픽스(prefix)를 지정함
    - 웹 브라우저마다 HTML이나 CSS를 해석하는 렌더링 엔진이 다름
    - 프리픽스를 붙여 브라우저를 구별함
    - 웹 브라우저는 웹 문서를 불러오면 내장된 렌더링 엔진에서 소스를 해석함
    - 웹 브라우저마다 내장된 자바스크립트 엔진도 서로 다름

- userAgent 프로퍼티
    - 사용자 에이전트 문자열
    - 사용자의 웹 브라우저 정보를 서버에 보낼 때 사용
    - 사용자의 웹 브라우저 버전, 자바스크립트의 엔진 종류 등 여러 정보가 들어 있음
    - 예전에는 웹 브라우저를 식별할 때 사용자 에이전트 문자열을 많이 사용함
    - 최근에는 같은 자바스크립트 엔진을 사용하는 브라우저가 많아서 에이전트 문자열의 내용과 겹쳐 사용하지 않는 추세

- 객체 정보
    - 사용할 수 있는 브라우저가 많아지고 웹 애플리케이션이 등장하면서 진동 감지 속성, 배터리 상태 체크 등의 기능이 새롭게 추가됨

- 프로퍼티
    - battery: 배터리 충전 상태
    - coockieEnabled: 쿠키 정보를 무시하면 false, 허용하면 true를 반환
    - geolocation: 모바일 기기를 이용한 위치 정보를 나타냄
    - language: 브라우저 UI의 언어 정보를 나타냄
    - oscpu: 현재 운영체제 정보를 나타냄
    - userAgent: 현재 브라우저 정보를 담고 있는 사용자 에이전트 문자열

history 객체
- 브라우저에서 [뒤로], [앞으로], 주소 표시줄에 입력해서 방문한 사ㅣ트 주소가 배열 형태로 저장됨
- 보안 문제로 읽기 전용임

- 프로퍼티
    - length: 현재 브라우저 창의 history 목록에 있는 방문한 사이트 개수가 저장됨

- 메서드
    - back(): history 목록에서 이전 페이지를 현재 화면으로 불러옴
    - foward(): history 목록에서 다음 페이지를 현재 화면으로 불러옴
    - go(): history 목록에서 현재 페이지를 기준으로 상대적인 위치에 있는 페이지를 현재 화면으로 불러옴. (history.go(1): 다음 페이지, history.go(-1): 이전 페이지

location 객체
- 브라우저의 주소 표시줄과 관련됨
- 현재 문서의 URL 주소 정보가 들어있음. 이 정보를 편집하면 현재 브라우저 창에서 열어야 할 사이트나 문서를 지정할 수 있음
- reload(), replace()가 매우 유용함

- 프로퍼티
    - hash: URL 중에서 #로 시작하는 해시 부분의 정보를 담고 있음
    - host: URL의 호스트 이름과 포트 번호를 담고 있음
    - hostname: URL의 호스트 이름이 저장됨
    - href: 전체 URL. 이 값을 변경하면 해당 주소로 이동할 수 있음
    - pathname: URL 경로가 저장됨
    - port: URL 포트 번호를 담고 있음
    - protocol: URL의 프로토콜을 저장
    - password: 도메인 이름 앞에 username과 password를 함꼐 입력해서 접속하는 사이트의 URL일 경우에 password 정보를 저장
    - search: URL 중에서 ?로 시작하는 검색 내용을 저장
    - username: 도메일 이름 앞에 username을 함께 입력해서 접속하는 사이트의 URL일 경우에 username 정보를 저장

- 메서드
    - assign(): 현재 문서에 새 문서 주소를 할당해서 새 문서를 가져옴
    - reload(): 현재 문서를 다시 불러옴. 새로고침
    - replace(): 현재 문서의 URL을 지우고 다른 URL의 문서로 교체. 현재 창에 다른 문서나 사이트를 보여줌
    - toString(): 현재 문서의 URL을 문자열로 변환

screen 객체
- 사용자의 화면 크기나 정보를 알아 낼 때 사용
- 화면 방향을 잠그거나 잠근 화면의 방향을 해제하는 역할. 풀 스크린 상태나 방향 전환 가능한 앱에서 사용

- 프로퍼티
    - availHeight: UI영역 (예를 들어 윈도우의 잡업 표시줄이나 Mac의 독)을 제외한 영역의 높이
    - availWidth: UI영역을 제외한 내용 표시 영역의 너비
    - colorDepth: 화면에서 픽셀을 렌더링할 때 사용하는 색상 수
    - width: UI영역을 포함한 화면의 너비
    - height: UI영역을 포함한 화면 높이
    - orientation: 화면의 현재 방향
    - pixelDepth: 화면에서 픽셀을 렌더링할 때사용하는 비트 수

- 메서드
    - lockOrientation():
    - unlockOrientation():